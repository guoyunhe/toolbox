import { Options } from 'quicktype-core';
import { CSSProperties, useEffect, useState } from 'react';
import Editor from 'src/components/editor';
import jsonToType from './jsonToType';

export interface TypeViewProps {
  data: any;
  style?: CSSProperties;
}

export default function TypeView({ data, style }: TypeViewProps) {
  // QuickType options
  const [options, setOptions] = useState<Partial<Options>>({
    alphabetizeProperties: true,
    allPropertiesOptional: false,
    indentation: '  ',
    leadingComments: ["Generated by Guo Yunhe's Toolbox"],
    rendererOptions: {
      'just-types': true as any,
      'prefer-unions': true as any,
    },
  });

  const [code, setCode] = useState('');

  useEffect(() => {
    const samples = Array.isArray(data)
      ? data.map((item) => JSON.stringify(item))
      : [JSON.stringify(data)];
    jsonToType(samples, options).then(({ lines }) => {
      setCode(lines.join('\n'));
    });
  }, [data]);

  return <Editor language="typescript" code={code} disabled style={style} />;
}
